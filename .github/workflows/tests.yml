name: Tests

on:
    push:
        branches:
            - 3.3.x
            - master
            - task/github-actions
    pull_request:
        branches:
            - 3.3.x
            - master

jobs:
    unit-tests:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
#                    - php: 7.1
#                      db: "none"
#                      NOTESTS: 1
#                    - php: 7.1
#                      db: "mariadb:10.1"
#                    - php: 7.1
#                      db: "mariadb:10.2"
                    - php: 7.1
                      db: "mariadb:10.3"
#                    - php: 7.1
#                      db: "mariadb:10.4"
#                    - php: 7.1
#                      db: "mariadb:10.5"
#                    - php: 7.1
#                      db: "postgres:9.5"
                    - php: 7.1
                      db: "postgres:10"
#                    - php: 7.1
#                      db: "postgres:11"
#                    - php: 7.1
#                      db: "postgres:12"
#                    - php: 7.1
#                      db: "postgres:13"
                    - php: 7.1
                      db: "sqlite3"
                    - php: 7.1
                      db: "mysql:5.6"
                    - php: 7.1
                      db: "mysql:5.7"
#                    - php: 7.1
#                      db: "mysql:8.0"
#                    - php: 7.2
#                      db: "mysql:5.7"
#                    - php: 7.3
#                      db: "mysql:5.7"
#                    - php: 7.4
#                      db: "mysql:5.7"

        name: PHP ${{ matrix.php }} - ${{ matrix.db }}

        services:
            mysql:
                image: ${{ matrix.db != 'mysql:5.6' && matrix.db != 'mysql:5.7' && matrix.db != 'mysql:8.0' && matrix.db != 'mariadb:10.1' && matrix.db != 'mariadb:10.2' && matrix.db != 'mariadb:10.3' && matrix.db != 'mariadb:10.4' && matrix.db != 'mariadb:10.5' && 'mysql:5.7' || matrix.db }}
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                    MYSQL_DATABASE: phpbb_tests
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3

            postgres:
                image: ${{ matrix.db != 'postgres:9.5' && matrix.db != 'postgres:9.6' && matrix.db != 'postgres:10' && matrix.db != 'postgres:11' && matrix.db != 'postgres:12' && matrix.db != 'postgres:13' && 'postgres:10' || matrix.db }}
                env:
                    POSTGRES_HOST: localhost
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432:5432
                options: >-
                    -v /var/run/postgresql:/var/run/postgresql
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6379:6379


        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - id: database-type
              env:
                  MATRIX_DB: ${{ matrix.db }}
              run: |
                  db=$(echo "${MATRIX_DB%%:*}")
                  echo "::set-output name=db::$db"

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, sqlite, pdo_sqlite, pdo_mysqli, intl, gd, exif, iconv
                  coverage: none

            - name: Setup environment for phpBB
              env:
                  DB: ${{steps.database-type.outputs.db}}
                  CI_PHP_VERSION: ${{ matrix.php }}
                  NOTESTS: 0
                  MYSQL8: ${{ matrix.db }} == 'mysql:8.0'
              run: |
                  travis/setup-phpbb.sh $DB CI_PHP_VERSION ${NOTESTS:-0} ${MYSQL8:-0}

            - name: Setup database
              env:
                  DB: ${{steps.database-type.outputs.db}}
                  PHP_VERSION: ${{ matrix.php }}
                  NOTESTS: 0
              run: |
                  travis/setup-database.sh $DB $PHP_VERSION $NOTESTS

            - name: Run unit tests
              env:
                  DB: ${{steps.database-type.outputs.db}}
              run: |
                  phpBB/vendor/bin/phpunit --configuration travis/phpunit-$DB-travis.xml --verbose --stop-on-error

        # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
        # Docs: https://getcomposer.org/doc/articles/scripts.md

        # - name: Run test suite
        #   run: composer run-script test
